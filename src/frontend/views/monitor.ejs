<% include header %>
<div id="chart-wrapper">
    <canvas id="monitor" height="160" style="padding: 10px"></canvas>
</div>
<div class="container">
    <div class="row">
        <div class="row" align="center" style="padding-top: 10px">
                <a class="waves-effect waves-light btn-small modal-trigger" href="#config-modal"><i class="material-icons left">settings</i>Configuration</a>
                <a id="toggle-record" class="waves-effect waves-light red btn-small"><i id="btn-icon" class="material-icons">pause</i></a>
        </div>
        <div class="modal modal-fixed-footer" id="config-modal">
            <div class="modal-content">
                <h4>Monitor Config</h4>
                <div class="container" style="padding-top: 20px">
                    <ul class="collapsible">
                        <% for (let i of Object.keys(topics)) { %>
                            <li>
                                <div class="collapsible-header"><%= i %></div>
                                    <div class="collapsible-body">
                                        <div class="row">
                                            <% for (let j of topics[i]) {%>
                                                <div class="col s6">
                                                    <label>
                                                        <% if (i === j) { %>
                                                            <input data-type="select-all" type="checkbox" value="<%= j %>"/>
                                                            <span>All</span>
                                                        <% } else { %>
                                                            <input data-type="select-single" type="checkbox" value="<%= i + '/' + j %>"/>
                                                            <span><%= j %></span>
                                                        <% } %>
                                                    </label>

                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                            </li>
                        <% } %>
                    </ul>
                </div>
            </div>
            <div class="modal-footer">
                <a href="#!" class="modal-close waves-effect waves-green btn-flat">Dismiss</a>
            </div>
        </div>
    </div>
    <script type="text/javascript" src="javascripts/name_tree.js"></script>
    <script type="text/javascript">
        $('.modal').modal()
        $('.collapsible').collapsible()
        $('input:checkbox').change(function() {
            if ($(this).is(':checked')) {
                if ($(this).attr('data-type') === 'select-all') {
                    let prefix = this.value
                    let expand_checkbox = Array.from($('input:checkbox')).filter(function (chk) {
                        return chk.value.indexOf(prefix) !== -1 && chk.value !== prefix
                    })
                    expand_checkbox.forEach(function (chk) {
                        chk.checked = true
                        Trie.expand_trie(make_arr(chk.value))
                    })
                } else {
                    Trie.expand_trie(make_arr(this.value))
                }
            } else {
                if ($(this).attr('data-type') === 'select-all') {
                    let prefix = this.value
                    Array.from($('input:checkbox')).filter(function (chk) {
                        return chk.value.indexOf(prefix) !== -1 && chk.value !== prefix
                    }).forEach(function (chk) {
                        chk.checked = false
                    })
                }
                Trie.remove(make_arr(this.value))
                chart.data.datasets = chart.data.datasets.filter(function(topic_data) {
                    return Trie.contains_name(make_arr(topic_data.label)) || Trie.contains_long(topic_data.label)
                })
                chart.update()
            }
        })
        $('#toggle-record').on('click', function() {
            if (!pause) {
                $('#btn-icon').text('play_arrow')
                $('#toggle-record').attr('class', 'waves-effect waves-light green btn-small')
                pause = true
            } else {
                $('#btn-icon').text('pause')
                $('#toggle-record').attr('class', 'waves-effect waves-light red btn-small')
                pause = false
            }
            last_query = null
        })
        var make_arr = function (name) { return name.split('/') }
        var pause = false
        var canvas = document.getElementById("monitor").getContext('2d')
        var chart = new Chart(canvas, {
            type: 'line',
            data: {
                labels: [],
                datasets: []
            },
            options: {}
        });
        var querying = false
        var random_color = function(alpha=1.0) {
            let rand_num = () => {
                return Math.floor(Math.random() * 256)
            }
            return `rgba(${rand_num()}, ${rand_num()}, ${rand_num()}, ${alpha})`
        }
        var last_query = null
        setInterval(function() {
            if (!querying && !pause) {
                querying = true
                let post_data = {
                    topics: Trie.construct_all(),
                    last_query: last_query
                }
                $.post('/monitor/fetch', post_data, function(data, status) {
                    querying = false
                    last_query = Date.now()
                    if (chart.data.labels.length > 15) {
                        chart.data.labels.shift()
                        chart.data.datasets.forEach(function(topic_data) {
                            topic_data.data.shift()
                        })
                    }
                    chart.data.labels.push(data.time)
                    for (let i of Object.keys(data)) {
                        if (i === 'time') continue
                        if (Trie.contains_name(make_arr(i)) || Trie.contains_long(i)) {
                            let found = false
                            for (let j of chart.data.datasets) {
                                if (j.label === i) {
                                    j.data.push(data[i])
                                    found = true
                                    break
                                }
                            }
                            if (!found) {
                                let data = []
                                for (let i = 0; i < chart.data.labels.length - 1; ++i) data.push(null)
                                data.push(data[i])
                                chart.data.datasets.push({
                                    label: i,
                                    borderColor: random_color(),
                                    fill: false,
                                    data: data,
                                })
                            }
                        }
                    }
                    chart.update()
                }).fail(function() {
                    alert('Network error.')
                })
            }
        }, 3000)
    </script>
</div>